<!DOCTYPE html>
<html lang="en" class="h-100">
    <head>
        <meta charset="UTF-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        
        <title>Emo Track</title>

        <link rel="canonical" href="https://getbootstrap.com/docs/5.0/examples/cover/">
        <!-- Bootstrap CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">      
        <!-- Chart.js  -->
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.umd.js" integrity="sha512-ZwR1/gSZM3ai6vCdI+LVF1zSq/5HznD3ZSTk7kajkaj4D292NLuduDCO1c/NT8Id+jE58KYLKT7hXnbtryGmMg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script> 
        <!-- Date-fns adapter -->
        <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
        <!-- Custom styles for this template -->
        <link rel="stylesheet" type="text/css" href="/css/mystyle.css">
        <!-- Slider stylesheet-->
        <link rel="stylesheet" type="text/css" href="/circular-slider/lib/circular-slider.css"/>
        

    </head>

    <body class="text-center text-white emo-bg">
        <div class="cover-container d-flex w-100 h-100 p-3 mx-auto flex-column">

            <%-  include('topbar.ejs') %>

            <main class="px-3">
                <container>            
                <% if (loggedin) { %>
                <h1 class="mt-3 mb-3"><%= `${user.username}'s Snapshots `%></h1>
                <h3>Your Emotional Snapshots Over Time</h3>

                <!-- Define an object to hold emotions mapped by datetime -->
                <% var emotionsByDatetime = {}; %>

                <!-- Define objects to hold emotions arrays mapped by datetime -->
                <% var enjoymentArray = []; %>
                <% var sadnessArray = [];  %>
                <% var angerArray = []; %>
                <% var contemptArray = []; %>
                <% var disgustArray = []; %>
                <% var fearArray = []; %>
                <% var surpriseArray = []; %>


                    <div class="col-sm-12">
                    <div class="justify-content-center w-90 mx-auto mb-5">

                        <canvas id="canvas" class="w-100 h-100"></canvas>
                        <!-- <input type="month" onchange="filterChart(this)"/> -->

                    </div>
                    </div>
                    <div class="col-sm-12">
                    <div class="justify-content-center w-50 mx-auto mb-5">
                        <h3>Your Top Triggers</h3>
                        <h5>The split of the Triggers that have impacted your emotions</h5>
                        <canvas id="canvasTriggers" class="w-100 h-100"></canvas>
                        <!-- <input type="month" onchange="filterChart(this)"/> -->

                    </div>
                    </div>
                    

                        <h5>Click a snapshot to edit your triggers and notes</h5>
                        <% } else { %>
                        <h2>My Snapshots</h2>
                        <% } %>
                        <div class="row row-cols-md-3 g-4 mt-3 mb-3 mx-auto text-center">
                            <% var dateOptions = { weekday: "long", year: "numeric", month: "long", day: "numeric", }; %>                        
                                    <% snapshots.forEach((row, index) => { %>
                               
                                <div class="col-lg-4 ">
                                    <div class="card text-white w-100  h-100 bg-dark">
                                <% if (row) { %>
                                    <% var snapshotid = row.emotional_snapshot_id; %>
                                    <% if (loggedin) { %> 

                            <% var snapshotdate = row.created_ts; %>
                            <% if (snapshotdate) { %>
                                <% var inputdate = new Date(snapshotdate); %>
                                <% var formattedDate = inputdate.toLocaleString("en-GB", dateOptions); %>
                            <% } %>

                            <% if (row.modified_ts) { %>
                                <% var snapshotupdatedate = row.modified_ts; %>
                                    <% if (snapshotupdatedate) { %>
                                        <% var inputupdatedate = new Date(snapshotdate); %>
                                        <% var formattedUpdateDate = inputupdatedate.toLocaleString("en-GB", dateOptions); %>
                                    <% } %>
                                <% } %>


                                    <a href='/user/<%=userid%>/edit/<%= snapshotid %>' class="remove_underline card-body">
                                        <div class="row">
                                        <div class="col-sm-4">
                                        <path d="M512 455c0 32-25 57-57 57H57c-32 0-57-25-57-57V128c0-31 25-57 57-57h398c32 0 57 26 57 57z" fill="#e0e7ec"/>
                                        <div class="w-75">
                                        <svg  xmlns="http://www.w3.org/2000/svg"
                                            aria-label="Calendar" role="img"
                                            viewBox="0 0 512 512">
                                            <path d="M484 0h-47c2 4 4 9 4 14a28 28 0 1 1-53-14H124c3 4 4 9 4 14A28 28 0 1 1 75 0H28C13 0 0 13 0 28v157h512V28c0-15-13-28-28-28z" fill="#27bdca"/>

                                            <g fill="#f3aab9">
                                            <circle cx="470" cy="142" r="14"/>
                                            <circle cx="470" cy="100" r="14"/>
                                            <circle cx="427" cy="142" r="14"/>
                                            <circle cx="427" cy="100" r="14"/>
                                            <circle cx="384" cy="142" r="14"/>
                                            <circle cx="384" cy="100" r="14"/>
                                            </g>

                                            <text id="month"
                                            x="32" 
                                            y="164" 
                                            fill="#fff" 
                                            font-family="monospace"
                                            font-size="140px"
                                            style="text-anchor: left"><%= inputdate.toLocaleString('default', { month: 'short' }); %></text>

                                            <text id="day"
                                            x="256" 
                                            y="400" 
                                            fill="#66757f" 
                                            font-family="monospace"
                                            font-size="256px"
                                            style="text-anchor: middle"><%= inputdate.getDate(); %></text>

                                            <text id="weekday"
                                            x="256" 
                                            y="480" 
                                            fill="#66757f" 
                                            font-family="monospace"
                                            font-size="64px"
                                            style="text-anchor: middle"><%= inputdate.toLocaleDateString('default', { weekday: 'short' }); %></text>
                                            </svg>
                                        </div>
                                        </div>
    
                                        <div class="col-sm-8">
                                        <div class="justify-content-center w-100 mx-auto">
                                            <canvas id="canvas_<%= index %>" class="w-100 h-100"></canvas>
                                        </div>
                                        </div>
                                        </div>
                                        <p class="card-text text-white text-start">
                                            <% if (row.default_trigger_ids && row.default_trigger_ids.length > 0) { %>
                                                <% row.default_trigger_ids.forEach((triggerSelected) => { %>
                                                   
                                                    <span class="badge bg-info text-dark text-start" style="font-family: monospace"><%= defaultTriggers.find(item => item.default_trigger_id === triggerSelected ).default_trigger_name; %></span>

                                                <% }); %>
                                            <% } %>
                                        </p>          
                                    </a>
                                </div>
                            </div>
                            <% } %>        
                        <% }; %>
                    <% }); %>
                        </div>
                    </div>

                </container>
            </main>

            <%-  include('footer.ejs') %>

            <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>         
   
            <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns/dist/chartjs-adapter-date-fns.bundle.min.js"></script>
            // Loop through each snapshot
                <% var xlabels = [] %>
                <% snapshots.forEach((snapshot) => { %>
                    // Extract snapshot datetime and emotions
                <%    const snapshotDatetime = new Date(snapshot.created_ts).toLocaleDateString();; %>
                <%    xlabels.push(snapshotDatetime) %>
                    // Push emotion values to respective arrays
                <%     enjoymentArray.push({ x: snapshotDatetime, y: snapshot.enjoyment_level }); %>
                <%     sadnessArray.push({ x: snapshotDatetime, y: snapshot.sadness_level }); %>
                <%     angerArray.push({ x: snapshotDatetime, y: snapshot.anger_level }); %>
                <%     contemptArray.push({ x: snapshotDatetime, y: snapshot.contempt_level }); %>
                <%     disgustArray.push({ x: snapshotDatetime, y: snapshot.disgust_level }); %>
                <%     fearArray.push({ x: snapshotDatetime, y: snapshot.fear_level }); %>
                <%     surpriseArray.push({ x: snapshotDatetime, y: snapshot.surprise_level }); %>
                <% }); %>
           <script>

    

                const enjoymentData = '<%- JSON.stringify(enjoymentArray) %>';
                const sadnessData = '<%- JSON.stringify(sadnessArray) %>';
                const angerData = '<%- JSON.stringify(angerArray) %>';
                const contemptData = '<%- JSON.stringify(contemptArray) %>';
                const disgustData = '<%- JSON.stringify(disgustArray) %>';
                const fearData = '<%- JSON.stringify(fearArray) %>';
                const surpriseData = '<%- JSON.stringify(surpriseArray) %>';
                const xlabelData = '<%- JSON.stringify(xlabels) %>';

                const enjoymentValues = JSON.parse(enjoymentData);
                const sadnessValues = JSON.parse(sadnessData);
                const angerValues = JSON.parse(angerData);
                const contemptValues = JSON.parse(contemptData);
                const disgusttValues = JSON.parse(disgustData);
                const fearValues = JSON.parse(fearData);
                const surpriseValues = JSON.parse(surpriseData);
                const xlabelValues = JSON.parse(xlabelData);

                const chartdata = {
                                    labels: xlabelValues,
                                    datasets: [{
                                        fill: false,
                                        data: enjoymentValues,
                                        label: 'Enjoyment',
                                        backgroundColor: "#f532e4",
                                        borderColor: "#f532e4",
                                        type: 'line',
                                        pointRadius: 1,
                                        lineTension: 0,
                                        borderWidth: 2,
                                    },
                                {
                                        fill: false,
                                        data: sadnessValues,
                                        label: 'Sadness',
                                        backgroundColor: "#3263f5",
                                        borderColor: "#3263f5",
                                        type: 'line',
                                        pointRadius: 1,
                                        lineTension: 0,
                                        borderWidth: 2,
                                    },
                                    {
                                        fill: false,
                                        data: angerValues,
                                        label: 'Anger',
                                        backgroundColor: "#fd3b3f",
                                        borderColor: "#fd3b3f",
                                        type: 'line',
                                        pointRadius: 1,
                                        lineTension: 0,
                                        borderWidth: 2,
                                    },
                                    {
                                        fill: false,
                                        data: contemptValues,
                                        label: 'Contempt',
                                        backgroundColor: "#5d3b6d",
                                        borderColor: "#5d3b6d",
                                        type: 'line',
                                        pointRadius: 1,
                                        lineTension: 0,
                                        borderWidth: 2,
                                    },
                                    {
                                        fill: false,
                                        data: disgusttValues,
                                        label: 'Disgust',
                                        backgroundColor: "#00cc66",
                                        borderColor: "#00cc66",
                                        type: 'line',
                                        pointRadius: 1,
                                        lineTension: 0,
                                        borderWidth: 2,
                                    },
                                    {
                                        fill: false,
                                        data: fearValues,
                                        label: 'Fear',
                                        backgroundColor: "#f5f532",
                                        borderColor: "#f5f532",
                                        type: 'line',
                                        pointRadius: 1,
                                        lineTension: 0,
                                        borderWidth: 2,
                                    },
                                    {
                                        fill: false,
                                        data: surpriseValues,
                                        label: 'Surprise',
                                        backgroundColor: "#31d2f2",
                                        borderColor: "#31d2f2",
                                        type: 'line',
                                        pointRadius: 1,
                                        lineTension: 0,
                                        borderWidth: 2,
                                    }
                                ]
                                };


                const chartconfig = {
                    labels: xlabelValues,
                    data: chartdata,
                    options: {
                        responsive: true,
                        animation: true,
                        maintainAspectRatio: true,
                        tension: 0
                        }
                    }

                const chart = new Chart('canvas', chartconfig);

            </script>


            <script>
            <% var triggerCounts = {}; %>
                <% snapshots.forEach((snapshot) => { %>
                    <% if (snapshot.default_trigger_ids) { %>
                        <% snapshot.default_trigger_ids.forEach((triggerId) => { %>
                            <% var triggerName = defaultTriggers.find(item => item.default_trigger_id === triggerId ).default_trigger_name; %>
                            <% triggerCounts[triggerName] = (triggerCounts[triggerName] || 0) + 1; %>
                        <% });%>
                    <% } %>
                <% }); %>
                
                const data = {
                labels: <%- JSON.stringify(Object.keys(triggerCounts)) %>,
                datasets: [{
                    label: 'Triggers',
                    data: <%- JSON.stringify(Object.values(triggerCounts)) %>, 
                    backgroundColor: [
                    'rgb(250, 76, 70)',
                    'rgb(66, 245, 152)',
                    'rgb(5, 99, 132)',
                    'rgb(255, 1, 132)',
                    'rgb(255, 99, 1)',
                    'rgb(161, 105, 245)',
                    'rgb(75, 192, 192)',
                    'rgb(250, 240, 60)',
                    'rgb(201, 203, 207)',
                    'rgb(54, 162, 235)'
                    ],
                    borderColor: [
                    'rgb(250, 76, 70)',
                    'rgb(66, 245, 152)',
                    'rgb(5, 99, 132)',
                    'rgb(255, 1, 132)',
                    'rgb(255, 99, 1)',
                    'rgb(161, 105, 245)',
                    'rgb(75, 192, 192)',
                    'rgb(250, 240, 60)',
                    'rgb(201, 203, 207)',
                    'rgb(54, 162, 235)'
                    ]
                }]
                };

                const chartTriggersConfig = {
                type: 'polarArea',
                data: data,
                options: {
                            plugins: {
                                legend: {
                                    display: true
                                }
                            },
                            scales: {
                                r: {
                                    display: true,
                                    ticks: {
                                        display: false,
                                        beginAtZero: true,
                                    },
                                    title: {
                                        
                                    }
                                }
                            }
                        }
                };

                const chartTriggers = new Chart('canvasTriggers', chartTriggersConfig);
            </script>
            
           

            <script>
                // Loop through each snapshot
                <% snapshots.forEach((snapshot, index) => { %>
                    const snapshotData_<%= index %> = {
                        labels: ['Enjoyment', 'Sadness', 'Anger', 'Contempt', 'Disgust', 'Fear', 'Surprise'],
                        datasets: [{
                            label: 'Emotion Levels',
                            data: [
                                <%= snapshot.enjoyment_level || 1 %>,
                                <%= snapshot.sadness_level || 1 %>,
                                <%= snapshot.anger_level || 1 %>,
                                <%= snapshot.contempt_level || 1 %>,
                                <%= snapshot.disgust_level || 1 %>,
                                <%= snapshot.fear_level || 1 %>,
                                <%= snapshot.surprise_level || 1 %>
                            ],
                            fill: true,
                            backgroundColor: '#ffb84c70',
                            borderColor: '#ffb84c70',
                            pointBackgroundColor: ['#f532e4', '#3263f5', '#fd3b3f', '#5d3b6d', '#00cc66', '#f5f532', '#31d2f2' ],
                            pointBorderColor: ['#f532e4', '#3263f5', '#fd3b3f', '#5d3b6d', '#00cc66', '#f5f532', '#31d2f2' ],
                            pointHoverBackgroundColor: '#fff',
                            pointHoverBorderColor: 'rgb(255, 99, 132)',
                            pointRadius: 7
                        }]
                    };

                    const config_<%= index %> = {
                        type: 'radar',
                        data: snapshotData_<%= index %>,
                        options: {
                            plugins: {
                                legend: {
                                    display: false,
                                }
                            },
                            elements: {
                                line: {
                                    borderWidth: 5
                                }
                            },
                            scales: {
                                r: {
                                    max: 5,
                                    min: 0,
                                    display: true,
                                    grid: {
                                        color: 'white'
                                    },
                                    pointLabels: {
                                        color: 'white'
                                    },
                                    ticks: {
                                        color: 'white',
                                        showLabelBackdrop: false,
                                        beginAtZero: true,
                                        min: 0,
                                        max: 5,
                                        stepSize: 1 
                                    }
                                    }
                                }                                              
                            }
                        };

                    const chart_<%= index %> = new Chart('canvas_<%= index %>', config_<%= index %>);
                <% }); %>
            </script>

        </div>
    </body>
</html>
